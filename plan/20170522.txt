0. Rough rough GUI
   - Home page to select the options

I. Implement Store.java

   - Will begin with instance variables _salary, _priceBurger, and a list of Employees
   - for this we will need Employee.java
*** Can be completed as soon as Mr. Brown approves propro

II. Minigame.pde
    A. Food.java interface and Patty.java, Lettuce.java, Tomato.java, TopBun.java, BottomBun.java, etc
       - Will just look like ellipses of different colors at first
   B. Order.java
      - Will have a static random generator to produce random orders
      - Each order will have a Queue of Food types
***A-B can be completed the day or day after Mr. Brown approves propro

   C. Use Processing to make it possible to build a burger
      - Buttons in a circle representing different foods
      - When you click the buttons the corresponding food is added to the pile
      - implement a counter to act as a timer with draw()
   D. Queue of orders to fulfill
      - Have random generator add an order to the queue every X seconds
*** A-D are essential
**********Completed, along with timing mechanism of E sort of

    E. Have timing mechansism along with customer happiness and cost of burgers
       - This will allow you to add money to your total
       - Happier customers have been served the correct order in under a certain number of seconds and will tip
       - Happier customers means more customers for the future

III. Basics for building a fast food chain
    A. Basics of Empire.java	
   - Uses processing for new option page 
   - Utilises a stack to check for achievements and will unlock after a certain threshold
   - Utilises an ArrayList to hold multiple stores, and give option to buy more stores
	-Tracks store revenue etc
   - Implements a queue for actions (i.e. buying multiple stores take X time)
   - Tracks customer happiness
*** ETA: 3 days after last part is complete (5/25-6)

IV. Employees
   - Adds the employee class
	- Hire/fire employees
	- Track employee happiness
ETA: 1-2 after

V. Farm
   - New option to control farm
   - Buy more cows / add more preservative
	- Adds/subtract cost and consumer happiness

VI. RNG and Misc
    - RNG for setbacks (strikes or e coli outbreak)
    - Pay for adds to increase popularity


Possible Setbacks/ Risks

We are not familiar with Processing the GUI will only be the bare minimum.
Solution: Processing.org and the Processing reference are super user-friendly so it's all good
Delegation

Most of the project is collaborative, but the skeleton and methods can be written separately before merged.
