heJEMony
Eric Li
Jenny Han
Matteo Wong
pd 3
---------------------
burger heJEMony


Suggested usage: 
* Replace all fields, angle brackets included, with specified info.
  eg, pd <pd#> --> pd 3
* Delete these instructions once all teammates understand usage.

devlog--
Use keyboard shortcut to jump to end,
 replicate entry template,
 modify appropriately.

zone of reflection--
Flesh out each category whenever necessary, appropriate.
 Need not be fully filled in until end of project,
 but best done as you go along.


/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Our code wasn't running at one point, the draw() method just froze entirely. We made our code more efficient by closing loops as soon as possible and changing if to else if chains, and we put all the loadImage() commands in the setup() method.
- We thought it froze again later on, but it was actually just the patty counter we had implemented working

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- When removing a store or hiring an employee, we have it on the queue in order to maintain the purpose of only being able to do one action at a time, however the action is completed immediately rather than when the queue ends in order to avoid errors with nullPointer exceptions from hiring and switching stores or closing multiple stores. We made hiring and firing instant in order to resolve this, but it still shows on the queue for more than an instant. 


COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- in processing you can only loadImage() in setup() (or rather if you do it elsewhere it can cause mysterious freezing
- we learned how to implement button functioning. We wrote an overButton function that we called in mouseClicked


MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Changed Farm screen from deciding meat percentage to choosing between farms
- Made e. coli much simpler, you just pay a fine and get rid of it
- Did not use a Stack of milestones, just had some if statements which was more convenient
- Implemented a Heap and HeapSort for accessing new farms; heap is based on percentage of real meat in each patty
-Added advertisement features last-minute for each store to increase/decrease customer satisfaction

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tales of wisdom gained...
||||||||||||||||||||||||||||||||||||||||||
- Organize code. We had some really long processing files and java classes as well a large number of classes for the whole game and it was difficult to locate method/variable names easily without code organized with comments and white space



 ______   ______   __   __   __       ______   _______     
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\    
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__  
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\ 
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/ 
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \ 
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/ 
==============================================================


2017-05-17
--------------------------------------------------------------
All :: basic premises for game. A diner dash with a minigame at the beginning. Figured out which data structures to use, lots of queues for orders, foods in order, actions, etc. Possibly priorityQueue, deques
Eric :: UMLs for Order, Food
Jenny :: UMLs Employee
Matteo :: UML Store, empire, flow chart
==============================================================
2017-05-18
--------------------------------------------------------------
All :: worked out the plan, prioritized which features are essential and which ones are fun. figured out what MVPs will be for minigame and empire
Eric :: basic Processing background
Jenny :: 
Matteo :: specific dates for completion
==============================================================
2017-05-19
--------------------------------------------------------------
All: figured out how Foods will function in context of Order
Eric :: Order.java and Foods
Jenny :: Order.java and Foods
Matteo :: Order.java and Foods, Order cost
==============================================================
2017-05-20
--------------------------------------------------------------
Eric :: added timing to minigame, tested adding photos to the minigame
Jenny :: loading screen minigame
Matteo :: beginnings of minigame, loading screen, buttons on side that produce ellipses of different colors based on different foods, Orders load on side
==============================================================
2017-05-21
--------------------------------------------------------------
Eric :: minigame visuals, changed spacing so that they look better. the cheese is dope
Jenny :: minigame printing money and time
Matteo :: minigame basics, debugging burgers going infinitely high
==============================================================
2017-05-22
--------------------------------------------------------------
Eric :: minigame timing, empire/store/employee classes
Jenny :: empire/store/employee classes, burger timing that makes money you earn decrease if you take too long
Matteo :: adding money to the minigame per price, empire/store/employee classes
==============================================================
2017-05-23
--------------------------------------------------------------
Eric :: graphics, updating UML of Minigame.pde, 
Jenny :: minigame timing, graphics
Matteo :: empire, MVP flow chart
==============================================================
2017-05-24
--------------------------------------------------------------
Eric :: empire MVP, added cheat code, worked on actionsList queue and how that will work/be processed by the draw() function
Jenny :: empire MVP, processing money, how much you make
Matteo :: empire MVP, you have a store and it earns money, made it not earn too fast fixed burger timing giving you $0 
==============================================================
2017-05-25
--------------------------------------------------------------
Eric :: empire MVP - buying stores. graphics for farm
Jenny :: empire MPV - buying stores, storesScreen functions
Matteo :: empire MVP - buying stores w/buy button and empire.buyStore(), storesScreen functions (setup and run), made it so you earn money faster, worked on screen for buying stores so that it looks good and money is printed nicely, with dollar sign and two floating point values only
==============================================================
2017-05-26
--------------------------------------------------------------
Eric :: screen for farm, home screen, implemented them with loadImage()
Jenny :: Screen for Stores, same as Eric, added operationsCost to stores
Matteo :: Screen for Stores, you can click on individual stores and see employees etc by using overButton() and making screen load employee names
==============================================================
2017-05-27
--------------------------------------------------------------
Eric :: created stores.png 
Jenny :: README.md
Matteo :: Screen for stores, firing employees w fireEmployeeButton() method, closing stores by implemeneting a state of 5 which has that screen, fixed runEmpire timeAction function. before it was always set to 0 so the empire never ran anything other than buying stores.
==============================================================
2017-05-28
--------------------------------------------------------------
Eric :: 
Jenny ::
Matteo :: implemented store.png page (updated coordinates of overButton() method calls in mouseClicked()), random name selector for stores by adding a final variable ArrayList<String> to Store, fixed bug of buying an eleventh store, worked on screen for individual store
==============================================================
2017-05-29
--------------------------------------------------------------
Eric :: printing queue picture for the stores, printQ() method
Jenny :: wrote Farm.java class, constructor, figured out variables to use, buyPatties() and patty tracker in Empire
Matteo :: worked on employee satisfaction decreasing with time if they don't get a raise, so functions like Employee.decreaseSatisfaction()
==============================================================
2017-05-30
--------------------------------------------------------------
Eric :: worked on farm screen and home screen looking nicer, updated UMLs, fixed printQ() to work in loading screen
Jenny :: worked on farm screen aesthetics, implementing farmHeap
Matteo :: implemented farmHeap so that you can access new farms as you progress by using a heapSort,  and actual coding of farm screen with setupFarm(), commented files
==============================================================
2017-05-30
--------------------------------------------------------------
Eric :: worked on farm screen and home screen looking nicer, updated UMLs, fixed printQ() to work in loading screen
Jenny :: worked on farm screen aesthetics, implementing farmHeap
Matteo :: implemented farmHeap so that you can access new farms as you progress by using a heapSort,  and actual coding of farm screen with setupFarm(), commented files
==============================================================
2017-05-31
--------------------------------------------------------------
Eric :: worked on queue, making the payment work on time with queuebuystore() so you dont go into negative money,
Jenny :: finished up setupFarm() w/ matteo, costs of patties
Matteo :: coded functionality of farm screen, with buttons for selecting different farms, inputted the patties so that they actually affect how much money you make
==============================================================
2017-06-01
--------------------------------------------------------------
Eric :: worked on minigame running more smoothly by troubleshooting code, graphics of top bun, making math work so you earned proper outs
Jenny :: worked on win and lose screens and functions, making math work
Matteo :: worked on printQ, improved farm functions by debugging them, went through code to make it more efficient so that draw() wouldnt freeze
==============================================================
2017-06-02
--------------------------------------------------------------
Eric :: worked on implementing ecoli with ecoliTimer, ecoliEffect, ecoliRun(), designed image, making Minigame work from empire homesecreen
Jenny :: worked on implementing ecoli with ecoliTimer, ecoliEffect, ecoliRun()
Matteo :: worked on implementing ecoli with ecoliTimer, ecoliEffect, ecoliRun(), debugging Minigame (unsuccessfully), 
==============================================================
2017-06-03
--------------------------------------------------------------
Eric :: 
Jenny ::
Matteo :: debugged Farm buttons which weren't clicking, the problem was a misplaced closing brace. debugged minigame to print properly from empire (remedying the failures from 06-02), messed with numbers/math of the game so it works better
==============================================================
2017-06-04
--------------------------------------------------------------
Eric :: 
Jenny :: made question mark present information (state=9)
Matteo :: debugged selling store, which used to boost your money by a over 500k. debugged hiring employees and then selling a store which created a nullpointer exception. debugged closing multiple stores at once
==============================================================
2017-06-05
--------------------------------------------------------------
Eric :: screen for advertisements, debugging minigame
Jenny :: checking for bugs, finished information screen and added button functioning to info screen from main screen
Matteo :: implemented advertisements in Store.java with adType variable and modifier methods, then added that to the <Empire>.runOperations() method. Debugged strikes and closing stores resulting in null pointer error
==============================================================
2017-06-06
--------------------------------------------------------------
Eric :: making ads cost money
Jenny :: making ads cost money, devlog 
Matteo :: making ads cost money 
==============================================================



